Now we will talk about one more variant of setting up the routing,
which is very good when working with many Apps, 
and it's good in cases when we have to add a link to a page from a different App.



In Django, each app can have its own urls.py that defines routes specific to that app. 
By setting app_name = "shop", you give the app a namespace so its routes can be referenced 
unambiguously (e.g., shop:single_course). This keeps app-level routing organized and avoids
conflicts when multiple apps define routes with the same name.


To set this all up we go to our App's urls.py and there we do these:
1. Create a variable 'app_name' and give it some name for example 'shop'.

!!! - In Django, you must use app_name (not any other variable name) 
to define the namespace for an appâ€™s URLs so they can be referenced unambiguously in templates.

2. Go to courses.html and do this :
<a href={% url 'shop:single_course' course.id %}>{{ course.title }}</a>
---> 'shop:single_course'

it  means we refer to App called shop and in it we  refer to path named single_course,
and there we pass the course.id  .


Overall, this is the most preffered way of routing.


Now we even can go to urls.py and change the route to anything we want:

path('<int:course_id>', views.single_course, name='single_course')
path('course/<int:course_id>', views.single_course, name='single_course')


Also let's also add a link to the Main text Course Shop that is in our base.html:

<a href="" class="navbar-brand">Courses Shop</a>  
turn this code into : 
    <a href= {% url 'shop:index' %} class="navbar-brand">Courses Shop</a>


Next we will talk about taking the templates directory into the main project folder.
