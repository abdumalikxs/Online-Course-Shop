If we go directly to http://localhost:8000/api
we are gonna get PageNotFound 404 

- We can make so that instead of PageNotFound going with this url: http://localhost:8000/api
the server will return us the list of Resources, such as Categories and Courses.
So that we know what requests are available in the API service.

For this to work we should change a little the routing settigns in urls.py

first we should import this:
from tastypie.api import Api

it is Api Class.

Next, let's instantiate our Api class:
api = Api(api_name='v1')

Now for this instance of API Class we should register the two resources we have:
api.register(course_resource)
api.register(category_resource)

# Now after registration the routes to our resources will be like this:
# api/v1/courses
# api/v1/categories


____ Now instead of adding two routes like this in URL patterns:
    path('api/', include(course_resource.urls)),
    path('api/', include(category_resource.urls)),

-----We should turn it into this:
path('api/', include(api.urls))


Let's save all changes and go to browser to test.

Now we should go to  http://localhost:8000/api/v1/ :
and we got this:

{
  "categories": {
    "list_endpoint": "/api/v1/categories/",
    "schema": "/api/v1/categories/schema/"
  },
  "courses": {
    "list_endpoint": "/api/v1/courses/",
    "schema": "/api/v1/courses/schema/"
  }
}

This is the list of our available resources.
And each of them have :

- list_endpoint
- schema

list_endpoint is the URLs that we already know.

Now let's discover schema's going for instance to http://localhost:8000//api/v1/categories/schema/ : 

The schema shows what data the Category resource has and the rules for each field.
like a DataType that is stored in the resource(database) for each field.
For instnace it says ID has a type Integer.


********
Lets go to this link now localhost:8000//api/v1/courses/schema/ :

-  And here we see the description of all of the Fields that are made for each course.
For instance price , datatype is float
reviews_qty --> integer and etc.

Basically its all the configurations that are for Field of some table Database.
We also can see that ID's "primary_key" is set to True.



In next lesson let's send a request for Deleting some course.
For this we have to install Postman.