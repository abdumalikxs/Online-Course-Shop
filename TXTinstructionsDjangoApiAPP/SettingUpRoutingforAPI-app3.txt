Routing for API we will do in the settings of our base Project

go to base/urls.py
and for now there we have 2 urls patterns: admin/ , shop/

we will give acces to our API app the same way we did for shop:
path('shop/', include('shop.urls'))

but now we didnt create shop.urls so let's just do it with importing our classes
CategoryResource and Courseresource :
'from api.models import CategoryResource, CourseResource'

--> after this, we should create instances of these classes:
course_resource = CourseResource()
category_resource = CategoryResource()

 We create instances so Tastypie can register and expose them as working API endpoints.


################
Now, we should add URL patterns:
let's for now skip the version and do something like this:
'api/courses/1'

So now our patterns look like this:

-------------------
course_resource = CourseResource()
category_resource = CategoryResource()

urlpatterns = [
    path('admin/', admin.site.urls),
    # include all routes from shop.urls
    path('shop/', include('shop.urls')),
    path('api/', include(course_resource.urls)),
    path('api/', include(category_resource.urls)),
]
-------------------

•	course_resource.urls is a list of URL patterns that Tastypie auto-generates for the CourseResource based on your Meta settings inside CourseResource.
•	It contains routes like /api/course/ and /api/course/<id>/ for listing and accessing individual courses.
•	Including course_resource.urls in urlpatterns makes those endpoints available to Django.
•	Same logic applies to category_resource.urls.