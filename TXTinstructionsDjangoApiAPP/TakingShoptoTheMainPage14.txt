Now we have this:

urlpatterns = [
    path('admin/', admin.site.urls),
    # include all routes from shop.urls
    path('shop/', include('shop.urls')),
    # course_resource.urls has auto-generated pathes based on your Meta settings inside CourseResource Class.
    path('api/', include('api.urls'))
    ]

-- that's why we see Page Not Found on the http://localhost:8000

if we wanted to create a new page for this page we could do like this:
path('', include('homepage.urls'))

--> with homepage beign our neew separate app.

But let's do a little different, let's just take our shop app to the main page.

for this it should look like this :

urlpatterns = [
    path('admin/', admin.site.urls),
    # include all routes from shop.urls
    path('', include('shop.urls')),
    # course_resource.urls has auto-generated pathes based on your Meta settings inside CourseResource Class.
    path('api/', include('api.urls')),
]

and after changing navigation is working pefrectly since 
for navigation in our tempaltes we used the names of our app's that were linked to 
their url patterns. We didnt indicate any absolute or relative links.


And also , let's in teh navbar add links to our Admin panel and Api service,
we can do this in the base.html

- we simple should append some things to the navbar
- we can add span so that links will appear from the right.

But here we cannot do named urls this way:
<a href={% url 'base:admin' %}>Admin</a>

If for instnace we had app_name = "base" for our base/urls.py
and name for the pattern to be name=admin

WE CANNOT DO THIS FOR the base project, it is only applciable for the Apps.


So for this thing we just add absolute links for admin and api apps.
so it will look simply like this:
          <a href='/admin/'>Admin</a>
          <a href='/api/v1/'>API</a>

Now resreshing the browser we see two links , but let's change the design a lil bit.
and add a space between links .
for thsi let's add a class and use bootstrap.

        <span class="navbar-text">
          <a href='/admin/' class="me-2">Admin</a>
          <a href='/api/v1/'>API</a>
        </span>

--- Looking good now.

Now let's make so that those links will opne in a new tab instead of current.
          <a href='/admin/' class="me-2" target="_blank">Admin</a>
          <a href='/api/v1/' target="_blank">API</a>


Next we are gonna do some changes to the settigns of the admin panel,
cuz there are some defautl texts like Django administration 
site administration and we are gonna make so that we will be 
able to create categories and courses on teh same page